{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Копия блокнота \"test 7.1 pytorch tasks.ipynb\"","provenance":[{"file_id":"1OopyCF9iczPe-YSEoeuvInbtrh4T6bGG","timestamp":1639390390556},{"file_id":"13LvGfU8uIZ5jmVM4WdVA9KktFhwZLCHq","timestamp":1606675349064}]},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.6.5"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","metadata":{"id":"vcnGdgw_YJ8u"},"source":["# PyTorch. Основы: синтаксис, torch.cuda и torch.autograd\n","\n","## Задание 7.1"]},{"cell_type":"code","metadata":{"id":"RtyozNmmYJ89","executionInfo":{"status":"ok","timestamp":1639390415690,"user_tz":-180,"elapsed":6578,"user":{"displayName":"Rifat Murtazin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPmcnxC6sIGApnRvER8bQYH7ECvyMtV6LlRu8m=s64","userId":"13908991885121948014"}}},"source":["import torch\n","import matplotlib.pyplot as plt"],"execution_count":1,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ny4-Qi2wYJ-6"},"source":["### Задача 1"]},{"cell_type":"markdown","metadata":{"id":"IWxlFq0bYJ-_"},"source":["1). Создайте два вещественных тензора: `a` размером (3, 4) и `b` размером (12,)   \n","2). Создайте тензор `c`, являющийся тензором `b`, но размера (2, 2, 3)  \n","3). Выведите первый столбец матрицы `a` с помощью индексации"]},{"cell_type":"code","metadata":{"id":"3oxZuk3yYJ_A","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1639391113418,"user_tz":-180,"elapsed":265,"user":{"displayName":"Rifat Murtazin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPmcnxC6sIGApnRvER8bQYH7ECvyMtV6LlRu8m=s64","userId":"13908991885121948014"}},"outputId":"91cd21a8-332c-4735-84f2-7a8b2003622c"},"source":["# Ваш код здесь\n","a = torch.FloatTensor(3, 4)\n","print(a[:,0])\n","b = torch.FloatTensor(12)\n","print(b)\n","c = b.reshape(2, 2, 3)\n","print(c)"],"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["tensor([-7.7694e+00,         nan,  4.7399e+16])\n","tensor([-7.4869e+00,  3.0729e-41,  1.4013e-45,  0.0000e+00,  2.8026e-45,\n","         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,\n","         0.0000e+00,  0.0000e+00])\n","tensor([[[-7.4869e+00,  3.0729e-41,  1.4013e-45],\n","         [ 0.0000e+00,  2.8026e-45,  0.0000e+00]],\n","\n","        [[ 0.0000e+00,  0.0000e+00,  0.0000e+00],\n","         [ 0.0000e+00,  0.0000e+00,  0.0000e+00]]])\n"]}]},{"cell_type":"markdown","metadata":{"id":"D2IP_FrKYKAA"},"source":["### Задача 2"]},{"cell_type":"markdown","metadata":{"id":"tBZFbSYQYKAA"},"source":["1). Создайте два вещественных тензора: `a` размером (5, 2) и `b` размером (1,10)   \n","2). Создайте тензор `c`, являющийся тензором `b`, но размера (5, 2)  \n","3). Произведите все арифметические операции с тензорами `a` и `c`"]},{"cell_type":"code","metadata":{"id":"hzs2bH3GYKAB","executionInfo":{"status":"ok","timestamp":1639391221143,"user_tz":-180,"elapsed":296,"user":{"displayName":"Rifat Murtazin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPmcnxC6sIGApnRvER8bQYH7ECvyMtV6LlRu8m=s64","userId":"13908991885121948014"}}},"source":["# Ваш код здесь\n","a = torch.FloatTensor(5, 2)\n","b = torch.FloatTensor(1, 10)\n","c = b.reshape(5, 2)"],"execution_count":11,"outputs":[]},{"cell_type":"code","source":["a + c"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U8P6dZ3nVM5G","executionInfo":{"status":"ok","timestamp":1639391233141,"user_tz":-180,"elapsed":339,"user":{"displayName":"Rifat Murtazin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPmcnxC6sIGApnRvER8bQYH7ECvyMtV6LlRu8m=s64","userId":"13908991885121948014"}},"outputId":"8a59750b-53e2-4660-cc60-0ec62ae35de2"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([[-1.4974e+01,  6.1458e-41],\n","        [ 3.5032e-44,  2.8026e-45],\n","        [        nan,  6.9141e-06],\n","        [ 4.4721e+21,  1.5956e+25],\n","        [ 7.5884e+31,  2.8970e+23]])"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["a - c"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Rks_URT_VQyN","executionInfo":{"status":"ok","timestamp":1639391240679,"user_tz":-180,"elapsed":351,"user":{"displayName":"Rifat Murtazin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPmcnxC6sIGApnRvER8bQYH7ECvyMtV6LlRu8m=s64","userId":"13908991885121948014"}},"outputId":"f3fa7570-49ae-4ab6-a422-6bb6fa18cf63"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([[ 1.2207e-04,  0.0000e+00],\n","        [ 3.2230e-44, -2.8026e-45],\n","        [        nan, -6.9141e-06],\n","        [ 4.4721e+21,  1.5956e+25],\n","        [-7.5884e+31, -2.8970e+23]])"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["a * c"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3IZEqedjVSj0","executionInfo":{"status":"ok","timestamp":1639391273999,"user_tz":-180,"elapsed":353,"user":{"displayName":"Rifat Murtazin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPmcnxC6sIGApnRvER8bQYH7ECvyMtV6LlRu8m=s64","userId":"13908991885121948014"}},"outputId":"483d37c1-fcd5-4dde-cb64-611fed9903cb"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([[5.6054e+01, 0.0000e+00],\n","        [0.0000e+00, 0.0000e+00],\n","        [       nan, 0.0000e+00],\n","        [0.0000e+00, 0.0000e+00],\n","        [       inf, 4.3215e+16]])"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["a / c"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vUlKJ4UyVa42","executionInfo":{"status":"ok","timestamp":1639391294851,"user_tz":-180,"elapsed":279,"user":{"displayName":"Rifat Murtazin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPmcnxC6sIGApnRvER8bQYH7ECvyMtV6LlRu8m=s64","userId":"13908991885121948014"}},"outputId":"9b5fe68c-5ccb-44a2-d63c-1842470ced17"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([[9.9998e-01, 1.0000e+00],\n","        [2.4000e+01, 0.0000e+00],\n","        [       nan, 0.0000e+00],\n","        [       inf,        inf],\n","        [6.2463e-16, 5.1492e-31]])"]},"metadata":{},"execution_count":17}]},{"cell_type":"markdown","metadata":{"id":"rIaroFO6YKBT"},"source":["### Задача 3"]},{"cell_type":"markdown","metadata":{"id":"GfLHVvKvYKBT"},"source":["1). Создайте тензор *целых чисел* `images` размерности (100, 200, 200, 3) (можно интерпретировать это как 100 картинок размера 200х200 с тремя цветовыми каналами, то есть 100 цветных изображений 200х200). Заполните его нулями  \n","\n","2). Сделайте так, чтобы у $i$-ой по порядку картинки была нарисована белая полоса толщиной два пикселя в строках, которые соответствуют номеру картинки. Например, у 3-ей по порядку картинки белая полоска будет занимать 6 и 7 строки, у 99 - 198 и 199. Сделать белую строку можно, записав в ячейки тензора число 255 (по всем трём каналам). Выведите несколько примеров с помощью `pylot`  \n","\n","3). Посчитайте среднее тензора `images` по 1-ой оси (по сути - средняя картинка), умножьте полученный тензор на 70. Нарисуйте с помощью `pyplot`, должна получиться серая картинка (при взятии среднего нужно привести тензор к float с помощью `.float()`, при отрисовке обратно к int с помощью `.int()`)"]},{"cell_type":"code","metadata":{"id":"pZVGHEQQYKBU","executionInfo":{"status":"ok","timestamp":1639392834548,"user_tz":-180,"elapsed":387,"user":{"displayName":"Rifat Murtazin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPmcnxC6sIGApnRvER8bQYH7ECvyMtV6LlRu8m=s64","userId":"13908991885121948014"}}},"source":["# Ваш код здесь\n","images = torch.IntTensor(100, 200, 200, 3).zero_()\n","for i in range(0, 100):\n","  images[i][i * 2 : i * 2 + 2] = 255\n","# print(images)"],"execution_count":30,"outputs":[]},{"cell_type":"code","source":["plt.imshow(images[50])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":286},"id":"ituBaTenXk7v","executionInfo":{"status":"ok","timestamp":1639391875268,"user_tz":-180,"elapsed":501,"user":{"displayName":"Rifat Murtazin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPmcnxC6sIGApnRvER8bQYH7ECvyMtV6LlRu8m=s64","userId":"13908991885121948014"}},"outputId":"a7ccd562-fe8c-4659-fffc-33048c757129"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.image.AxesImage at 0x7fa35f7eb910>"]},"metadata":{},"execution_count":23},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["plt.imshow(images[70])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":286},"id":"XLNuTL41XnT-","executionInfo":{"status":"ok","timestamp":1639392593419,"user_tz":-180,"elapsed":451,"user":{"displayName":"Rifat Murtazin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPmcnxC6sIGApnRvER8bQYH7ECvyMtV6LlRu8m=s64","userId":"13908991885121948014"}},"outputId":"909be8e1-05d0-42c0-e90f-d054eb95e4af"},"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.image.AxesImage at 0x7fa35f6cfdd0>"]},"metadata":{},"execution_count":28},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["plt.imshow((torch.mean(images.float(), dim=0) * 70).int())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":286},"id":"d7Fk-3Vfa1li","executionInfo":{"status":"ok","timestamp":1639392934197,"user_tz":-180,"elapsed":620,"user":{"displayName":"Rifat Murtazin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPmcnxC6sIGApnRvER8bQYH7ECvyMtV6LlRu8m=s64","userId":"13908991885121948014"}},"outputId":"6ce8012a-9f27-4526-fc07-849153861d83"},"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.image.AxesImage at 0x7fa35f359a90>"]},"metadata":{},"execution_count":31},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"oQnhq5ZdYKCu"},"source":["### Задача 4"]},{"cell_type":"markdown","metadata":{"id":"UB95BhgTYKCu"},"source":["- В Colab нажмите в меню сверху: `Runtime` -> `Change Runtime Type` -> `GPU`, где изначально стоит `None` (`Среда выполнение` - `Сменить среду выполнения`)\n","- Объявите тензор `a` размера (2, 3, 4) и тензор `b` размера (1, 8, 3) на GPU, иницилизируйте их случайно равномерно (`.uniform_()`)\n","- Затем измените форму тензора `b`, чтобы она совпадала с формой тензора `a`, получите тензор `c`  \n","- Переместите `c` на CPU, переместите `a` на CPU  \n","- Оберните их в `Variable()`\n","- Объявите тензор `L = torch.mean((c - a) `**` 2)` и посчитайте градиент `L` по `c` ( то есть $\\frac{\\partial{L}}{\\partial{c}})$\n","- Выведите градиент `L` по `c`"]},{"cell_type":"code","metadata":{"id":"WESOm5TCYKCv","executionInfo":{"status":"ok","timestamp":1639393661023,"user_tz":-180,"elapsed":8819,"user":{"displayName":"Rifat Murtazin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPmcnxC6sIGApnRvER8bQYH7ECvyMtV6LlRu8m=s64","userId":"13908991885121948014"}}},"source":["# Ваш код здесь\n","import torch\n","a = torch.FloatTensor(2, 3, 4).uniform_()\n","b = torch.FloatTensor(1, 8, 3).uniform_()\n","a = a.cuda()\n","b = b.cuda()\n","c = b.reshape(2, 3, 4)\n"],"execution_count":7,"outputs":[]},{"cell_type":"code","source":["a"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6OiMRhMQd__i","executionInfo":{"status":"ok","timestamp":1639393663319,"user_tz":-180,"elapsed":1019,"user":{"displayName":"Rifat Murtazin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPmcnxC6sIGApnRvER8bQYH7ECvyMtV6LlRu8m=s64","userId":"13908991885121948014"}},"outputId":"ed3c3886-1a0d-4555-9f01-692211f332f8"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([[[0.4359, 0.9986, 0.9693, 0.1842],\n","         [0.4608, 0.6543, 0.1345, 0.1447],\n","         [0.5433, 0.6618, 0.0090, 0.6627]],\n","\n","        [[0.6914, 0.8783, 0.4366, 0.8386],\n","         [0.8969, 0.6001, 0.1303, 0.7131],\n","         [0.2901, 0.0495, 0.9537, 0.5988]]], device='cuda:0')"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["b"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"irPnjpb6eAmo","executionInfo":{"status":"ok","timestamp":1639393666726,"user_tz":-180,"elapsed":389,"user":{"displayName":"Rifat Murtazin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPmcnxC6sIGApnRvER8bQYH7ECvyMtV6LlRu8m=s64","userId":"13908991885121948014"}},"outputId":"76cd210b-ad22-4943-8335-613993549eb9"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([[[0.9046, 0.7037, 0.9687],\n","         [0.2403, 0.7186, 0.2363],\n","         [0.8218, 0.6065, 0.7268],\n","         [0.1859, 0.8626, 0.9794],\n","         [0.9895, 0.3549, 0.3780],\n","         [0.3550, 0.5631, 0.9675],\n","         [0.3311, 0.6558, 0.0910],\n","         [0.7943, 0.6057, 0.6504]]], device='cuda:0')"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["c"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hRvkqBEZeBN0","executionInfo":{"status":"ok","timestamp":1639393593951,"user_tz":-180,"elapsed":578,"user":{"displayName":"Rifat Murtazin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPmcnxC6sIGApnRvER8bQYH7ECvyMtV6LlRu8m=s64","userId":"13908991885121948014"}},"outputId":"ceca9f5a-6a41-46ea-92a6-36ae3da73f75"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([[[0.9987, 0.7864, 0.2041, 0.5949],\n","         [0.2415, 0.6315, 0.2851, 0.8377],\n","         [0.6636, 0.7655, 0.2803, 0.6946]],\n","\n","        [[0.6039, 0.9797, 0.9905, 0.5240],\n","         [0.6349, 0.7233, 0.4220, 0.5262],\n","         [0.0936, 0.9740, 0.1205, 0.4034]]])"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["c = c.cpu()\n","a = a.cpu()\n","print(c.is_cuda)\n","print(a.is_cuda)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KBzE1KFJes9H","executionInfo":{"status":"ok","timestamp":1639393801719,"user_tz":-180,"elapsed":405,"user":{"displayName":"Rifat Murtazin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPmcnxC6sIGApnRvER8bQYH7ECvyMtV6LlRu8m=s64","userId":"13908991885121948014"}},"outputId":"b317370d-3d58-4010-ed7e-9fe74ae13de5"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["False\n","False\n"]}]},{"cell_type":"code","source":["from torch.autograd import Variable\n","a = Variable(a, requires_grad=True)\n","c = Variable(c, requires_grad=True)"],"metadata":{"id":"M0FKSZGAfEKk","executionInfo":{"status":"ok","timestamp":1639393955129,"user_tz":-180,"elapsed":1659,"user":{"displayName":"Rifat Murtazin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPmcnxC6sIGApnRvER8bQYH7ECvyMtV6LlRu8m=s64","userId":"13908991885121948014"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["L = torch.mean((c - a)**2)\n","L.backward()\n","c.grad"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Rb4w-IdYfpQb","executionInfo":{"status":"ok","timestamp":1639394131342,"user_tz":-180,"elapsed":428,"user":{"displayName":"Rifat Murtazin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPmcnxC6sIGApnRvER8bQYH7ECvyMtV6LlRu8m=s64","userId":"13908991885121948014"}},"outputId":"f821a467-5ffb-4cf0-93a0-141f348447b5"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([[[ 7.8103e-02, -4.9157e-02, -8.5205e-05,  9.3516e-03],\n","         [ 4.2965e-02, -6.9665e-02,  1.1455e-01,  7.6969e-02],\n","         [ 3.0599e-02, -7.9321e-02,  1.4227e-01,  5.2778e-02]],\n","\n","        [[ 4.9688e-02, -8.7228e-02, -9.7631e-03, -8.0599e-02],\n","         [-5.5622e-02,  6.1236e-02,  3.3475e-02, -9.5416e-03],\n","         [-3.3191e-02,  1.2414e-01, -5.8008e-02,  8.5958e-03]]])"]},"metadata":{},"execution_count":16}]}]}